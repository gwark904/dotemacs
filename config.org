#+TITLE: config.org --- My personal GNU Emacs config
#+DATE: <2017-06-13 Tue>
#+AUTHOR: Geoffrey T. Wark
#+EMAIL: geoff@geoffwark.com

* First Things First

Prevent customization settings from appending junk to this file.

#+BEGIN_SRC emacs-lisp
  (setq custom-file "~/.emacs.d/custom.el")
  (load custom-file :noerror)
#+END_SRC

Prevent Emacs clutter by moving backup/autosave files to system's tempdir

#+BEGIN_SRC emacs-lisp
  (setq backup-directory-alist
        `((".*" . ,temporary-file-directory)))
  (setq auto-save-file-name-transforms
        `((".*" ,temporary-file-directory t)))
#+END_SRC

Always install MELPA packages automatically if not already present on the system.

#+BEGIN_SRC emacs-lisp
  (setq use-package-always-ensure t)
#+END_SRC

* User Interface
** Free up screen real estate

The following toolbars take up unnecessary space:

#+BEGIN_SRC emacs-lisp
  (menu-bar-mode -1)
  (scroll-bar-mode -1)
  (tool-bar-mode -1)
#+END_SRC

** Theme

[[http://kippura.org/zenburnpage/][Zenburn]] is pretty easy on the eyes.

#+BEGIN_SRC emacs-lisp
  (use-package zenburn-theme
    :init
    (load-theme 'zenburn t))
#+END_SRC

** Cursor

Make the cursor bright red so that it's more easy to track.

#+BEGIN_SRC emacs-lisp
  (add-to-list 'default-frame-alist '(cursor-color . "red"))
#+END_SRC

Also stop that goddamn blinking!

#+BEGIN_SRC emacs-lisp
  (blink-cursor-mode -1)
#+END_SRC

** Face

Italicize comments.

#+BEGIN_SRC emacs-lisp
  (make-face-italic 'font-lock-comment-face)
#+END_SRC

Make region (selection) colors more obvious.

#+BEGIN_SRC emacs-lisp
  (set-face-attribute 'region nil
                      :background "white smoke"
                      :foreground "black")
#+END_SRC

** Font

[[https://pagure.io/liberation-fonts][Liberation Fonts]] are pretty dope.  Be sure you have them installed.

#+BEGIN_SRC emacs-lisp
  ;; TODO make this compatiable with daemon/terminal/Windows emacs

  ;; SOURCE= https://www.emacswiki.org/emacs/SetFonts
  ;; (defun font-exists-p (font)
  ;;   "Check if a particular font is present on the system.

  ;; Returns a BOOLEAN"
  ;;   (if (null (x-list-fonts font))
  ;;       nil t))

  ;; (if (font-exists-p "Liberation Mono")
      (add-to-list 'default-frame-alist '(font . "Liberation Mono"));)
#+END_SRC

* Indentation
** Default

Don't use tabs.  You can still insert a tab if needed with =C-q tab=

#+BEGIN_SRC emacs-lisp
  (setq-default indent-tabs-mode nil)
#+END_SRC

Use 2 space widths per indent.

#+BEGIN_SRC emacs-lisp
  (setq-default tab-width 2)
#+END_SRC

* Sane Defaults

Most of these settings come from [[https://github.com/magnars/.emacs.d/blob/master/settings/sane-defaults.el][Magnar Sveen]] or [[https://github.com/danielmai/.emacs.d/blob/master/config.org][Daniel Mai]].

#+BEGIN_SRC emacs-lisp
  ;; UTF-8 please
  (setq locale-coding-system 'utf-8) ; pretty
  (set-terminal-coding-system 'utf-8) ; pretty
  (set-keyboard-coding-system 'utf-8) ; pretty
  (set-selection-coding-system 'utf-8) ; please
  (prefer-coding-system 'utf-8) ; with sugar on top

  ;; Auto refresh buffers
  (global-auto-revert-mode 1)

  ;; Don't beep at me
  (setq visible-bell t)

  ;; Remove text in active region if inserting text
  (delete-selection-mode 1)

  ;; Show me empty lines after buffer end
  (set-default 'indicate-empty-lines t)

  ;; Easily navigate sillycased words
  (global-subword-mode 1)

  ;; Don't break lines for me, please
  (setq-default truncate-lines t)

  ;; Allow recursive minibuffers
  (setq enable-recursive-minibuffers t)

  ;; Focus the current line.
  (global-hl-line-mode t)

  ;; Display column numbers in the mode line.
  (setq column-number-mode t)

  ;; Show keystrokes in progress
  (setq echo-keystrokes 0.1)

  ;; Move files to trash when deleting
  (setq delete-by-moving-to-trash t)

  ;; Real emacs knights don't use shift to mark things
  (setq shift-select-mode nil)

  ;; Sentences do not need double spaces to end. Period.
  (set-default 'sentence-end-double-space nil)
#+END_SRC

* Packages

** MANUAL
*** pianobar.el

Run Pandora as an inferior process in emacs by using pianobar 

#+BEGIN_SRC emacs-lisp
  (if (file-exists-p "~/workspace/elisp/pianobar.el/pianobar.el")
      (progn
        (add-to-list 'load-path "~/workspace/elisp/pianobar.el/")
        (autoload 'pianobar "pianobar" nil t)

        (add-hook 'pianobar-mode-hook '(lambda ()
                                         (setq truncate-lines nil)))))
#+END_SRC
